swagger: '2.0'
info:
  version: 0.0.5
  title: Onboarding API
  description: Beanstream Onboarding API
host: www.beanstream.com
basePath: /api/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  '/accounts/{id}/application/':
    post:
      tags:
        - Application
      description: Creates a new application for an account.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: integer
          format: int32
        - name: application
          in: body
          description: Applicaiton details
          required: true
          schema:
            $ref: '#/definitions/application'
      responses:
        '200':
          description: Application has been accepted. Further actions might need to be taken to complete account activation. Actions specified in application status message response.
          schema:
            $ref: '#/definitions/applicationStatus'
        '400':
          description: Bad Request - Malformed request. Errors displayed in message body.
          schema:
            $ref: '#/definitions/errorModel'
        '401':
          description: Unauthorized - Not accessing the application with the right credentials.
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description: Not found - Account ID or application not found
          schema:
            $ref: '#/definitions/errorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      tags:
        - Application
      description: Update the application
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of account whose application we will update
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Application has been updated. Further actions will need to be taken to complete account activation. Actions specified in application status message response.
          schema:
            $ref: '#/definitions/application'
        '400':
          description: Bad Request - Malformed request. Errors displayed in message body.
          schema:
            $ref: '#/definitions/errorModel'
        '401':
          description: Unauthorized - Not accessing the application with the right credentials.
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description: Not found - Account ID or application not found
          schema:
            $ref: '#/definitions/errorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      tags:
        - Application
      description: Withdraw the application
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of account whose application will be withdrawn
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: application response
          schema:
            $ref: '#/definitions/errorModel'
        '401':
          description: Unauthorized - Not accessing the application with the right credentials.
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description: Not found - Account ID or application not found
          schema:
            $ref: '#/definitions/errorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  '/accounts/{id}/application/status/':
    get:
      tags:
        - Application
      description: "Returns the application's status"
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of account to fetch
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: account response
          schema:
            $ref: '#/definitions/applicationStatus'
        '401':
          description: Unauthorized - Not accessing the application with the right credentials.
          schema:
            $ref: '#/definitions/errorModel'
        '404':
          description: Not found - Account ID or application not found
          schema:
            $ref: '#/definitions/errorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  '/accounts/{id}/application/verify/':
    post:
      tags:
        - eID Verify
      description: Submit IQ answers
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: integer
          format: int32
        - name: application
          in: body
          description: Applicaiton details
          required: true
          schema:
            $ref: '#/definitions/application'
      responses:
        '200':
          description: Answers passed. Proceed with application. Next-steps described in response message.
          schema:
            $ref: '#/definitions/eidIqQuestionResponse'
        '400':
          description: Bad Request - Malformed request. Errors displayed in message body.
          schema:
            $ref: '#/definitions/errorModel'
        '401':
          description: Unauthorized - Not accessing the application with the right credentials.
          schema:
            $ref: '#/definitions/errorModel'
        '402':
          description: 'IQ answers did not pass. Resubmit to try again. There is a limit to how many times you can resubmit!'
          schema:
            $ref: '#/definitions/eidIqQuestionResponse'
        '403':
          description: 'Forbidden - Two possible reasons for this response. 1) User has exceeded the number of eID retries, application has now been rejected. 2) Accessing this API endpoint before performing the initial application submission.'
          schema:
            $ref: '#/definitions/eidIqQuestionResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    get:
      tags:
        - eID Verify
      description: Get IQ questions
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: IQ questions for Equifax
          schema:
            $ref: '#/definitions/eidIqQuestions'
        '401':
          description: Unauthorized - Not accessing the application with the right credentials.
          schema:
            $ref: '#/definitions/errorModel'
        '403':
          description: 'Forbidden - Two possible reasons for this response. 1) User has exceeded the number of eID retries, application has now been rejected. 2) Accessing this API endpoint before performing the initial application submission.'
        '404':
          description: Not found - Account ID or application not found
          schema:
            $ref: '#/definitions/errorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  '/accounts/{id}/application/documents/':
    post:
      tags:
        - Documents
      description: Submit a document
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: integer
          format: int32
        - name: document
          in: body
          description: The document
          required: true
          schema:
            $ref: '#/definitions/documentSubmission'
      responses:
        '200':
          description: Document submitted successfully
          schema:
            $ref: '#/definitions/documentSubmitted'
        '400':
          description: Bad Request - Malformed request. Errors displayed in message body.
          schema:
            $ref: '#/definitions/errorModel'
        '401':
          description: Unauthorized - Not accessing the application with the right credentials.
          schema:
            $ref: '#/definitions/errorModel'
        '403':
          description: Forbidden - Occurs when accessing this API endpoint before performing the initial application submission or before the eID Verify check stage is complete (if eID Verify was required).
          schema:
            $ref: '#/definitions/errorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  '/accounts/{id}/application/submission/':
    post:
      tags:
        - Adjudication
      description: 'Submit an application for final adjudication and approval'
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: 'Appliation approved'
          schema:
            $ref: '#/definitions/documentSubmitted'
        '400':
          description: 'Bad Request - Malformed request. Errors displayed in message body.'
          schema:
            $ref: '#/definitions/errorModel'
        '401':
          description: 'Unauthorized - Not accessing the application with the right credentials.'
          schema:
            $ref: '#/definitions/errorModel'
        '402':
          description: 'IQ answers did not pass. Resubmit to try again. There is a limit to how many times you can resubmit!'
          schema:
            $ref: '#/definitions/errorModel'
        '403':
          description: 'Forbidden - Occurs when accessing this API endpoint before performing the initial application submission, before the eID Verify check stage is complete (if eID Verify was required), or before submitting all required documents.'
          schema:
            $ref: '#/definitions/errorModel'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  errorModel:
    description: 'The general response message returned for all requests that do not return an object from the model.'
    required:
      - code
      - category
      - message
    properties:
      code:
        type: integer
        format: int32
      category:
        type: integer
        format: int32
      message:
        type: string
  application:
    required:
      - basicInfo
    properties:
      companyLogin:
        type: string
        description: 'Optional company login name. If not supplied it will be generated based on {basicInfo: {companyName} }. This value is case insensitive.'
      userLogin:
        type: string
        description: 'The username for the login. This field is optional and if is not supplied the first character of the first name of {basicInfo: {firstName}} and the last name {basicInfo: {lastName}} will be appended and used. For example if the first name is Bob and the last name is Gerty, the returned username will be bgerty. This value is case insensitive. Full login requires the companyLogin, userLogin, and password. Once an account is created more users can be added to the company.'
      userPassword:
        type: string
        description: 'The password for the user. This field is optional and if it is not supplied then a random alphanumeric string will be generated. This field is case sensitive and allows alphanumeric plus special characters. Must have one upper case, one lowercase, and one special character; 8-16 characters in length.'
      basicInfo:
        $ref: '#/definitions/basicInformation'
      businessInfo:
        $ref: '#/definitions/businessInformation'
      termsAndConditions:
        $ref: '#/definitions/termsAndConditions'
      custom:
        $ref: '#/definitions/custom'
      
  basicInformation:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      companyName:
        type: string
      existingMerchantAccount:
        type: boolean
      annualSalesVolume:
        type: number
        format: float32
      currency:
        type: string
        description: 'Predefined allowed values varchar(3)'
      mcc:
        type: string
      goodsAndServiceDescription:
        type: string
        description: 'Describe what goods or services you provide. varchar(1000)'
      salesPersonName:
        type: string
  businessInformation:
    properties:
      companyLocation:
        $ref: '#/definitions/address'
      companyTradingAddress:
        $ref: '#/definitions/address'
      companyInfo:
        $ref: '#/definitions/companyInformation'
      primaryContact:
        $ref: '#/definitions/primaryContactInformation'
      personalInfo:
        $ref: '#/definitions/personalInformation'
      previousAddress:
        $ref: '#/definitions/address'
      companyOwnership:
        $ref: '#/definitions/companyOwnership'
      vatDetails:
        description: 'for UK accounts only'
        $ref: '#/definitions/vatDetails'
      bankAccount:
        $ref: '#/definitions/bankAccountDetails'
      aboutCompany:
        $ref: '#/definitions/aboutCompany'
  address:
    properties:
      unit:
        type: string
        description: 'Unit number of the address'
      streetNumber:
        type: string
      streetName:
        type: string
      city:
        type: string
      province:
        type: string
      country:
        type: string
      postalcode:
        type: string
  companyInformation:
    properties:
      legalBusinessName:
        type: string
      businessEntityType:
        type: string
      companyWebsiteUrl:
        type: string
      businessStartDate:
        type: string
        format: date-timedate
        description: 'in ISO 8601 format with a timezone'
      businessNumber:
        type: string
      doingBusinessAs:
        type: string
      registrationNumber:
        type: string
      legalEntityType:
        type: string
      federalTaxID:
        type: string
        description: 'ID or EIN'
      averageTransactionAmount:
        type: number
        format: float32
      averageDeliveryTime:
        type: number
        format: float64
        description: 'how long it takes to deliver the product in hours'
      maximumTransactionAmount:
        type: number
        format: float32
      salesAreSeasonal:
        type: boolean
      whenChargeFullPayment:
        type: string
        description: 'When do you charge the customer full payment.'
  primaryContactInformation:
    properties:
      phone:
        type: string
      email:
        type: string
  personalInformation:
    properties:
      applicantAddress:
        $ref: '#/definitions/address'
      livedAtLastTwoYears:
        description: 'Have you lived at this address the last 2 years?'
        type: boolean
      dateOfBirth:
        type: string
        format: date
        description: 'In ISO 8601 format'
      socialInsuranceNumber:
        type: string
        description: 'SIN or Social Security number'
      positionWithCompany:
        type: string
        description: 'What is your title or position with the company?'
  companyOwnership:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      percentOwnership:
        description: 'what percentage, from 0.0 to 1.0, of the company does the owner own.'
        type: number
        format: float32
      ownerAddress:
        description: 'The address of the owner'
        $ref: '#/definitions/address'
  vatDetails:
    properties:
      taxNumber:
        type: string
      class:
        type: string
  bankAccountDetails:
    properties:
      accountHolderName:
        type: string
      currency:
        type: string
      accountNumber:
        type: string
      transitCode:
        description: 'bank transit code'
        type: string
      institutionNumber:
        description: 'bank institution number'
        type: string
      abaRoutingNumber:
        type: string
      accountHolderCity:
        type: string
      bankCity:
        type: string
      bankName:
        type: string
      swiftCode:
        type: string
      iban:
        type: string
  aboutCompany:
    properties:
      deliveryOfgoods:
        type: string
      whoProvidesGoodsAndServices:
        description: 'who provides the goods and services you sell?'
        type: string
      providerDetails:
        type: string 
        description: 'Details on what the provider provides'
      newToCommerce:
        type: boolean
        description: 'Are you new to commerce/MOTO?'
      refundPercent:
        type: number
        format: float32
        description: 'percentage from 0.0 to 1.0'
      chargebackPercent:
        type: number
        format: float32
        description: 'percentage from 0.0 to 1.0'
      internetPercent:
        type: number
        format: float32
        description: 'percentage from 0.0 to 1.0'
      motoPercent:
        type: number
        format: float32
        description: 'percentage from 0.0 to 1.0'
      seasonalSales:
        type: string
        description: 'UNKNOWN what this should be'
      q1SeasonalSales:
        type: number
        format: float32
        description: 'Jan-Mar. UNKNOWN what this should be. Percent or amount?'
      q2SeasonalSales:
        type: number
        format: float32
        description: 'Apr-Jun. UNKNOWN what this should be. Percent or amount?'
      q3SeasonalSales:
        type: number
        format: float32
        description: 'Jly-Sep. UNKNOWN what this should be. Percent or amount?'
      q4SeasonalSales:
        type: number
        format: float32
        description: 'Oct-Dec. UNKNOWN what this should be. Percent or amount?'
      recurringBilling:
        type: boolean
        description: 'are thre recurring purchases?'
      recurringPercentWeekly:
        type: number
        format: float32
        description: 'How does that percentage distribute weekly? Percentage from 0.0 to 1.0'
      recurringPercentMonthly:
        type: number
        format: float32
        description: 'How does that percentage distribute monthly? Percentage from 0.0 to 1.0'
      recurringPercentQuarterly:
        type: number
        format: float32
        description: 'How does that percentage distribute quarterly? Percentage from 0.0 to 1.0'
      recurringPercentBiAnnual:
        type: number
        format: float32
        description: 'How does that percentage distribute bi-annually? Percentage from 0.0 to 1.0'
      recurringPercentAnnual:
        type: number
        format: float32
        description: 'How does that percentage distribute annually? Percentage from 0.0 to 1.0'
  termsAndConditions:
    properties:
      personalGuarantee:
        type: boolean
      accepted:
        type: boolean
      agreementId:
        type: string
        description: 'the unique ID of the agreement that was supplied by Beanstream'
      agreementTimestamp: 
        type: string
        format: date-time
        description: 'The date and time that the merchant agreed to the terms and conditions in ISO 8601 format with a supplied timezone.'
      applicantIpAddress:
        type: string
        description: 'The IP address of the merchant sub account that is applying. It is expected that this is the IP address of the person who agreed to the terms and conditions.'

  custom:
    properties:
      ref1:
        type: number
        format: int32
        description: 'numeric, 8 byte integer'
      ref2:
        type: integer
        format: int16
        description: 'numeric, 4 byte integer'
      ref3:
        type: string
        description: 'alphanumeric, 64 character max'
      ref4:
        type: string
        description: 'alphanumeric, 256 character max'
      ref5:
        type: string
        description: 'alphanumeric, 256 character max'
        
  applicationStatus:
    required:
      - merchantId
    properties:
      merchantId:
        type: integer
        format: int32
      state:
        type: string
        description: 'The approval state the application is in [appSubmission, eidVerify, iedAnswers, documents, adjudication, approved, declined]. Not all states will be required by each application, for example the business type might determine that no documents are required, or that EIDVerify is not needed. Final adjudication is always required. The end state will be Approved or Declined.'
      message:
        type: string
        description: 'Describes the next step that must be taken.'
      eidQuestionsRemaining:
        type: integer
        format: int16
      documentsRequired:
        description: "A list of the remaining documents that are required. These might only be populated if in the 'documents' state."
        type: array
        items:
          $ref: '#/definitions/document'
      declinedReason:
        description: 'If the application was declined at any state this will describe the reason why.'
        type: string
  document:
    description: 'A document that is required for application approval.'
    properties:
      filename:
        type: string
        description: 'Name of the document. This will match to one of the list of possible files.'
      filetype:
        type: string
        description: 'File type of the document, accepted extensions.'
      description:
        type: string
        description: 'Description of the document'
      submitted:
        type: boolean
        description: 'True if this document has already been submitted'
  eidIqQuestions:
    required:
      - accountId
      - questions
    properties:
      accountId:
        type: integer
        format: int32
      message:
        type: string
      questions:
        type: array
        items:
          $ref: '#/definitions/question'
  question:
    required:
      - question
    properties:
      question:
        type: string
  eidIqQuestionResponse:
    properties:
      passed:
        type: boolean
      canRetry:
        type: boolean
      numRetriesRemaining:
        type: integer
        format: int32
  documentSubmission:
    properties:
      tag:
        description: 'This is the pre-defined name of the file that is required. It is not the file name on disk! The file name is defined by Beanstream and will be one of "cheque", "bank_statement" etc. TBD!'
        type: string
      mimeType:
        description: 'file format. Often time it will be an image of pdf'
        type: string
      content:
        description: 'base64 encoded binary file data'
        type: string
  documentSubmitted:
    properties:
      tag:
        description: 'This is the pre-defined name of the file that is required. It is not the file name on disk! The file name is defined by Beanstream and will be one of "cheque", "bank_statement" etc. TBD!'
        type: string
      filename:
        type: string
      mimeType:
        type: string
